AWSTemplateFormatVersion: 2010-09-09

Description: Deploys the base resources necessary for aws cicd.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Regions
        Parameters:
          - PrimaryRegion
          - BackupRegion
      - Label:
          default: Iamic
        Parameters:
          - IdentityStoreId
          - InstanceArn
  Deployment:
    StackName: flagscript-organization-setup

Parameters:
  ###########
  # Regions #
  ###########
  PrimaryRegion:
    Description: The primary organization region.
    Type: String

  BackupRegion:
    Description: The backup region for state data.
    Type: String

  #########
  # Iamic #
  #########
  IdentityStoreId:
    Description: The id of the identity and access management identity center directory store.
    Type: String

  InstanceArn:
    Description: The arn of the identity and access management identity center instance.
    Type: String

Conditions:
  IsPrimaryRegion: !Equals [!Ref PrimaryRegion, !Ref "AWS::Region"]
  IsBackupRegion: !Equals [!Ref BackupRegion, !Ref "AWS::Region"]
  IsEitherRegion: !Or [Condition: IsPrimaryRegion, Condition: IsBackupRegion]

Resources:
  ##########
  # Dynamo #
  ##########
  TerraformLockTable:
    Type: AWS::DynamoDB::Table
    Condition: IsPrimaryRegion
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: false
      TableName: terraform-state-lock
      Tags:
        - Key: flagscript:account-owner:owner
          Value: flagscript
        - Key: flagscript:automation:environment
          Value: root
        - Key: flagscript:cost-allocation:application-id
          Value: organiztion-setup
        - Key: flagscript:cost-allocation:owner
          Value: flagscript
        - Key: flagscript:data-owner:owner
          Value: flagscript
        - Key: flagscript:operations:owner
          Value: flagscript
        - Key: Name
          Value: terraform-state-lock

  #######
  # Iam #
  #######
  OrgAdministratorPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: IsPrimaryRegion
    Properties:
      Description: Policy for organization administrators.
      Path: /flagscript/
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:dynamodb:*:${AWS::AccountId}:table/terraform-state-lock
            Sid: TerraformStateLocking
          - Action:
              - organizations:*
            Effect: Allow
            Resource: "*"
            Sid: AllowOrganizationsAccess
          - Action:
              - s3:ListBucket
            Effect: Allow
            Resource:
              - !GetAtt TerraformStateBucket.Arn
            Sid: AllowTerraformStateBucketAccess
          - Action:
              - s3:DeleteObject
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::org-setup-${AWS::AccountId}-*-terraform-state/*
            Sid: AllowTerraformStateBucketObjectAccess
        Version: 2012-10-17

  OrgS3ReplicationRole:
    Type: AWS::IAM::Role
    Condition: IsPrimaryRegion
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - s3.amazonaws.com
      Description: Role to replication the org state bucket.
      Path: /s3/
      RoleName: OrgS3ReplicationRole

  BucketBackupPolicy:
    Type: AWS::IAM::Policy
    Condition: IsPrimaryRegion
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetReplicationConfiguration
              - s3:ListBucket
            Effect: Allow
            Resource: !GetAtt TerraformStateBucket.Arn
          - Action:
              - s3:GetObjectVersion
              - s3:GetObjectVersionAcl
              - s3:GetObjectVersionForReplication
              - s3:GetObjectVersionTagging
            Effect: Allow
            Resource: !Sub ${TerraformStateBucket.Arn}/*
          - Action:
              - s3:ReplicateObject
              - s3:ReplicateDelete
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:s3:::org-setup-${AWS::AccountId}-${BackupRegion}-terraform-state
      PolicyName: BucketBackupPolicy
      Roles:
        - !Ref OrgS3ReplicationRole

  #########
  # Iamic #
  #########
  OrgAdministratorGroup:
    Type: AWS::IdentityStore::Group
    Condition: IsPrimaryRegion
    Properties:
      Description: Organization administrator group. Org root account only.
      DisplayName: org-administrator
      IdentityStoreId: !Ref IdentityStoreId

  OrgAdministratorPermissionSet:
    Type: AWS::SSO::PermissionSet
    Condition: IsPrimaryRegion
    Properties:
      Description: Administrator permission set for the org root account ONLY.
      InstanceArn: !Ref InstanceArn
      ManagedPolicies:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Name: org-administrator
      Tags:
        - Key: flagscript:account-owner:owner
          Value: flagscript
        - Key: flagscript:automation:environment
          Value: root
        - Key: flagscript:cost-allocation:application-id
          Value: organiztion-setup
        - Key: flagscript:cost-allocation:owner
          Value: flagscript
        - Key: flagscript:data-owner:owner
          Value: flagscript
        - Key: flagscript:operations:owner
          Value: flagscript
        - Key: Name
          Value: org-administrator

  OrgAdministratorPermissionSetRootAccountAssignment:
    Type: AWS::SSO::Assignment
    Condition: IsPrimaryRegion
    Properties:
      InstanceArn: !Ref InstanceArn
      PermissionSetArn: !GetAtt OrgAdministratorPermissionSet.PermissionSetArn
      PrincipalId: !GetAtt OrgAdministratorGroup.GroupId
      PrincipalType: GROUP
      TargetId: !Ref "AWS::AccountId"
      TargetType: AWS_ACCOUNT

  ###############################
  # S3 - Terraform State Bucket #
  ###############################
  # Bucket to be used to maintain terraform state.
  TerraformStateBucket:
    Type: AWS::S3::Bucket
    Condition: IsEitherRegion
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub org-setup-${AWS::AccountId}-${AWS::Region}-terraform-state
      LifecycleConfiguration:
        Rules:
          - AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            Id: abort-failed-uploads
            Status: Enabled
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      ReplicationConfiguration: !If
        - IsPrimaryRegion
        - Role: !GetAtt OrgS3ReplicationRole.Arn
          Rules:
            - Destination:
                Bucket: !Sub arn:${AWS::Partition}:s3:::org-setup-${AWS::AccountId}-${BackupRegion}-terraform-state
                StorageClass: STANDARD
              Id: Backup
              Prefix: ""
              Status: Enabled
        - !Ref "AWS::NoValue"
      Tags:
        - Key: flagscript:account-owner:owner
          Value: flagscript
        - Key: flagscript:automation:environment
          Value: root
        - Key: flagscript:cost-allocation:application-id
          Value: organiztion-setup
        - Key: flagscript:cost-allocation:owner
          Value: flagscript
        - Key: flagscript:data-owner:owner
          Value: flagscript
        - Key: flagscript:operations:owner
          Value: flagscript
        - Key: Name
          Value: !Sub org-setup-${AWS::AccountId}-${AWS::Region}-terraform-state
      VersioningConfiguration:
        Status: Enabled

  # Bucket policy for the terraform state bucket. Enforces ssl uploads only, and forces client
  # to expect files to be encrypted at rest with aws:kms.
  TerraformStateBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: IsEitherRegion
    Properties:
      Bucket: !Ref TerraformStateBucket
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Condition:
              Bool:
                aws:SecureTransport: false
            Effect: Deny
            Principal: "*"
            Resource: !Sub ${TerraformStateBucket.Arn}/*
            Sid: DenyInsecureConnections
